<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.eq.modules.auth.dao.UserMapper">
    <resultMap id="BaseResultMap" type="org.eq.modules.auth.entity.User">
        <id column="id" jdbcType="BIGINT" property="id" />
	    <result column="name" jdbcType="VARCHAR" property="name" />
	    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
	    <result column="password" jdbcType="VARCHAR" property="password" />
	    <result column="tx_password" jdbcType="VARCHAR" property="txPassword" />
	    <result column="sex" jdbcType="INTEGER" property="sex" />
	    <result column="level" jdbcType="VARCHAR" property="level" />
	    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
	    <result column="auth_status" jdbcType="INTEGER" property="authStatus" />
	    <result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
	    <result column="photo_head" jdbcType="VARCHAR" property="photoHead" />
	    <result column="intro" jdbcType="VARCHAR" property="intro" />
	    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
	    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
	    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
	    <result column="del_flag" jdbcType="INTEGER" property="delFlag" />
    </resultMap>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List">
        id,name,nickname,password,tx_password,sex,level,mobile,auth_status,birthday,photo_head,intro,create_date,update_date,remarks,del_flag
    </sql>

    <select id="selectByExample" parameterType="org.eq.modules.auth.entity.UserExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from user
        where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from user
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByExample" parameterType="org.eq.modules.auth.entity.UserExample">
        delete from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" parameterType="org.eq.modules.auth.entity.User">
        insert into user (name,nickname,password,tx_password,sex,level,mobile,auth_status,birthday,photo_head,intro,create_date,update_date,remarks,del_flag)
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            #{name,jdbcType=VARCHAR},
            #{nickname,jdbcType=VARCHAR},
            #{password,jdbcType=VARCHAR},
            #{txPassword,jdbcType=VARCHAR},
            #{sex,jdbcType=INTEGER},
            #{level,jdbcType=VARCHAR},
            #{mobile,jdbcType=VARCHAR},
            #{authStatus,jdbcType=INTEGER},
            #{birthday,jdbcType=TIMESTAMP},
            #{photoHead,jdbcType=VARCHAR},
            #{intro,jdbcType=VARCHAR},
            #{createDate,jdbcType=TIMESTAMP},
            #{updateDate,jdbcType=TIMESTAMP},
            #{remarks,jdbcType=VARCHAR},
            #{delFlag,jdbcType=INTEGER},
        </trim>
    </insert>

    <insert id="insertSelective" parameterType="org.eq.modules.auth.entity.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            name,
            nickname,
            password,
            tx_password,
            sex,
            level,
            mobile,
            auth_status,
            birthday,
            photo_head,
            intro,
            create_date,
            update_date,
            remarks,
            del_flag,
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{name,jdbcType=VARCHAR},
            #{nickname,jdbcType=VARCHAR},
            #{password,jdbcType=VARCHAR},
            #{txPassword,jdbcType=VARCHAR},
            #{sex,jdbcType=INTEGER},
            #{level,jdbcType=VARCHAR},
            #{mobile,jdbcType=VARCHAR},
            #{authStatus,jdbcType=INTEGER},
            #{birthday,jdbcType=TIMESTAMP},
            #{photoHead,jdbcType=VARCHAR},
            #{intro,jdbcType=VARCHAR},
            #{createDate,jdbcType=TIMESTAMP},
            #{updateDate,jdbcType=TIMESTAMP},
            #{remarks,jdbcType=VARCHAR},
            #{delFlag,jdbcType=INTEGER},
        </trim>
    </insert>

    <select id="countByExample" parameterType="org.eq.modules.auth.entity.UserExample" resultType="java.lang.Long">
        select count(*) from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map">
        update user
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.nickname != null">
                nickname = #{record.nickname,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null">
                password = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.txPassword != null">
                tx_password = #{record.txPassword,jdbcType=VARCHAR},
            </if>
            <if test="record.sex != null">
                sex = #{record.sex,jdbcType=INTEGER},
            </if>
            <if test="record.level != null">
                level = #{record.level,jdbcType=VARCHAR},
            </if>
            <if test="record.mobile != null">
                mobile = #{record.mobile,jdbcType=VARCHAR},
            </if>
            <if test="record.authStatus != null">
                auth_status = #{record.authStatus,jdbcType=INTEGER},
            </if>
            <if test="record.birthday != null">
                birthday = #{record.birthday,jdbcType=TIMESTAMP},
            </if>
            <if test="record.photoHead != null">
                photo_head = #{record.photoHead,jdbcType=VARCHAR},
            </if>
            <if test="record.intro != null">
                intro = #{record.intro,jdbcType=VARCHAR},
            </if>
            <if test="record.createDate != null">
                create_date = #{record.createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateDate != null">
                update_date = #{record.updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.remarks != null">
                remarks = #{record.remarks,jdbcType=VARCHAR},
            </if>
            <if test="record.delFlag != null">
                del_flag = #{record.delFlag,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map">
        update user
        set
        <trim  suffixOverrides=",">
            id = #{record.id,jdbcType=INTEGER},
            name = #{record.name,jdbcType=VARCHAR},
            nickname = #{record.nickname,jdbcType=VARCHAR},
            password = #{record.password,jdbcType=VARCHAR},
            tx_password = #{record.txPassword,jdbcType=VARCHAR},
            sex = #{record.sex,jdbcType=INTEGER},
            level = #{record.level,jdbcType=VARCHAR},
            mobile = #{record.mobile,jdbcType=VARCHAR},
            auth_status = #{record.authStatus,jdbcType=INTEGER},
            birthday = #{record.birthday,jdbcType=TIMESTAMP},
            photo_head = #{record.photoHead,jdbcType=VARCHAR},
            intro = #{record.intro,jdbcType=VARCHAR},
            create_date = #{record.createDate,jdbcType=TIMESTAMP},
            update_date = #{record.updateDate,jdbcType=TIMESTAMP},
            remarks = #{record.remarks,jdbcType=VARCHAR},
            del_flag = #{record.delFlag,jdbcType=INTEGER},
        </trim>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="org.eq.modules.auth.entity.User">
        update user
        <set>
            <if test="name != null">
            name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
            nickname = #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
            password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="txPassword != null">
            tx_password = #{txPassword,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
            sex = #{sex,jdbcType=INTEGER},
            </if>
            <if test="level != null">
            level = #{level,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
            mobile = #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="authStatus != null">
            auth_status = #{authStatus,jdbcType=INTEGER},
            </if>
            <if test="birthday != null">
            birthday = #{birthday,jdbcType=TIMESTAMP},
            </if>
            <if test="photoHead != null">
            photo_head = #{photoHead,jdbcType=VARCHAR},
            </if>
            <if test="intro != null">
            intro = #{intro,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
            create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
            update_date = #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="remarks != null">
            remarks = #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="delFlag != null">
            del_flag = #{delFlag,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="org.eq.modules.auth.entity.User">
        update user
        set
        <trim  suffixOverrides=",">
              name = #{name,jdbcType=VARCHAR},
              nickname = #{nickname,jdbcType=VARCHAR},
              password = #{password,jdbcType=VARCHAR},
              tx_password = #{txPassword,jdbcType=VARCHAR},
              sex = #{sex,jdbcType=INTEGER},
              level = #{level,jdbcType=VARCHAR},
              mobile = #{mobile,jdbcType=VARCHAR},
              auth_status = #{authStatus,jdbcType=INTEGER},
              birthday = #{birthday,jdbcType=TIMESTAMP},
              photo_head = #{photoHead,jdbcType=VARCHAR},
              intro = #{intro,jdbcType=VARCHAR},
              create_date = #{createDate,jdbcType=TIMESTAMP},
              update_date = #{updateDate,jdbcType=TIMESTAMP},
              remarks = #{remarks,jdbcType=VARCHAR},
              del_flag = #{delFlag,jdbcType=INTEGER},
        </trim>
        where id = #{id,jdbcType=BIGINT}
    </update>

</mapper>