<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.eq.modules.product.dao.ProductMapper">
    <resultMap id="BaseResultMap" type="org.eq.modules.product.entity.Product">
        <id column="id" jdbcType="BIGINT" property="id" />
	    <result column="name" jdbcType="VARCHAR" property="name" />
	    <result column="product_img" jdbcType="VARCHAR" property="productImg" />
	    <result column="product_accept_id" jdbcType="BIGINT" property="productAcceptId" />
	    <result column="product_issuer_id" jdbcType="BIGINT" property="productIssuerId" />
	    <result column="unit_price" jdbcType="INTEGER" property="unitPrice" />
	    <result column="sort" jdbcType="INTEGER" property="sort" />
	    <result column="status" jdbcType="INTEGER" property="status" />
	    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
	    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
	    <result column="expiration_start" jdbcType="VARCHAR" property="expirationStart" />
	    <result column="expiration_end" jdbcType="VARCHAR" property="expirationEnd" />
	    <result column="tag_ids" jdbcType="VARCHAR" property="tagIds" />
	    <result column="tag_names" jdbcType="VARCHAR" property="tagNames" />
	    <result column="extend_info" jdbcType="VARCHAR" property="extendInfo" />
	    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    </resultMap>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List">
        id,name,product_img,product_accept_id,product_issuer_id,unit_price,sort,status,create_date,update_date,expiration_start,expiration_end,tag_ids,tag_names,extend_info,remarks
    </sql>

    <select id="selectByExample" parameterType="org.eq.modules.product.entity.ProductExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from platform_product
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from platform_product
        where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from platform_product
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByExample" parameterType="org.eq.modules.product.entity.ProductExample">
        delete from platform_product
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" parameterType="org.eq.modules.product.entity.Product">
        insert into platform_product (name,product_img,product_accept_id,product_issuer_id,unit_price,sort,status,create_date,update_date,expiration_start,expiration_end,tag_ids,tag_names,extend_info,remarks)
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            #{name,jdbcType=VARCHAR},
            #{productImg,jdbcType=VARCHAR},
            #{productAcceptId,jdbcType=BIGINT},
            #{productIssuerId,jdbcType=BIGINT},
            #{unitPrice,jdbcType=INTEGER},
            #{sort,jdbcType=INTEGER},
            #{status,jdbcType=INTEGER},
            #{createDate,jdbcType=TIMESTAMP},
            #{updateDate,jdbcType=TIMESTAMP},
            #{expirationStart,jdbcType=VARCHAR},
            #{expirationEnd,jdbcType=VARCHAR},
            #{tagIds,jdbcType=VARCHAR},
            #{tagNames,jdbcType=VARCHAR},
            #{extendInfo,jdbcType=VARCHAR},
            #{remarks,jdbcType=VARCHAR},
        </trim>
    </insert>

    <insert id="insertSelective" parameterType="org.eq.modules.product.entity.Product">
        insert into platform_product
        <trim prefix="(" suffix=")" suffixOverrides=",">
            name,
            product_img,
            product_accept_id,
            product_issuer_id,
            unit_price,
            sort,
            status,
            create_date,
            update_date,
            expiration_start,
            expiration_end,
            tag_ids,
            tag_names,
            extend_info,
            remarks,
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{name,jdbcType=VARCHAR},
            #{productImg,jdbcType=VARCHAR},
            #{productAcceptId,jdbcType=BIGINT},
            #{productIssuerId,jdbcType=BIGINT},
            #{unitPrice,jdbcType=INTEGER},
            #{sort,jdbcType=INTEGER},
            #{status,jdbcType=INTEGER},
            #{createDate,jdbcType=TIMESTAMP},
            #{updateDate,jdbcType=TIMESTAMP},
            #{expirationStart,jdbcType=VARCHAR},
            #{expirationEnd,jdbcType=VARCHAR},
            #{tagIds,jdbcType=VARCHAR},
            #{tagNames,jdbcType=VARCHAR},
            #{extendInfo,jdbcType=VARCHAR},
            #{remarks,jdbcType=VARCHAR},
        </trim>
    </insert>

    <select id="countByExample" parameterType="org.eq.modules.product.entity.ProductExample" resultType="java.lang.Long">
        select count(*) from platform_product
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map">
        update platform_product
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.productImg != null">
                product_img = #{record.productImg,jdbcType=VARCHAR},
            </if>
            <if test="record.productAcceptId != null">
                product_accept_id = #{record.productAcceptId,jdbcType=BIGINT},
            </if>
            <if test="record.productIssuerId != null">
                product_issuer_id = #{record.productIssuerId,jdbcType=BIGINT},
            </if>
            <if test="record.unitPrice != null">
                unit_price = #{record.unitPrice,jdbcType=INTEGER},
            </if>
            <if test="record.sort != null">
                sort = #{record.sort,jdbcType=INTEGER},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=INTEGER},
            </if>
            <if test="record.createDate != null">
                create_date = #{record.createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateDate != null">
                update_date = #{record.updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.expirationStart != null">
                expiration_start = #{record.expirationStart,jdbcType=VARCHAR},
            </if>
            <if test="record.expirationEnd != null">
                expiration_end = #{record.expirationEnd,jdbcType=VARCHAR},
            </if>
            <if test="record.tagIds != null">
                tag_ids = #{record.tagIds,jdbcType=VARCHAR},
            </if>
            <if test="record.tagNames != null">
                tag_names = #{record.tagNames,jdbcType=VARCHAR},
            </if>
            <if test="record.extendInfo != null">
                extend_info = #{record.extendInfo,jdbcType=VARCHAR},
            </if>
            <if test="record.remarks != null">
                remarks = #{record.remarks,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map">
        update platform_product
        set
        <trim  suffixOverrides=",">
            id = #{record.id,jdbcType=BIGINT},
            name = #{record.name,jdbcType=VARCHAR},
            product_img = #{record.productImg,jdbcType=VARCHAR},
            product_accept_id = #{record.productAcceptId,jdbcType=BIGINT},
            product_issuer_id = #{record.productIssuerId,jdbcType=BIGINT},
            unit_price = #{record.unitPrice,jdbcType=INTEGER},
            sort = #{record.sort,jdbcType=INTEGER},
            status = #{record.status,jdbcType=INTEGER},
            create_date = #{record.createDate,jdbcType=TIMESTAMP},
            update_date = #{record.updateDate,jdbcType=TIMESTAMP},
            expiration_start = #{record.expirationStart,jdbcType=VARCHAR},
            expiration_end = #{record.expirationEnd,jdbcType=VARCHAR},
            tag_ids = #{record.tagIds,jdbcType=VARCHAR},
            tag_names = #{record.tagNames,jdbcType=VARCHAR},
            extend_info = #{record.extendInfo,jdbcType=VARCHAR},
            remarks = #{record.remarks,jdbcType=VARCHAR},
        </trim>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="org.eq.modules.product.entity.Product">
        update platform_product
        <set>
            <if test="name != null">
            name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="productImg != null">
            product_img = #{productImg,jdbcType=VARCHAR},
            </if>
            <if test="productAcceptId != null">
            product_accept_id = #{productAcceptId,jdbcType=BIGINT},
            </if>
            <if test="productIssuerId != null">
            product_issuer_id = #{productIssuerId,jdbcType=BIGINT},
            </if>
            <if test="unitPrice != null">
            unit_price = #{unitPrice,jdbcType=INTEGER},
            </if>
            <if test="sort != null">
            sort = #{sort,jdbcType=INTEGER},
            </if>
            <if test="status != null">
            status = #{status,jdbcType=INTEGER},
            </if>
            <if test="createDate != null">
            create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
            update_date = #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="expirationStart != null">
            expiration_start = #{expirationStart,jdbcType=VARCHAR},
            </if>
            <if test="expirationEnd != null">
            expiration_end = #{expirationEnd,jdbcType=VARCHAR},
            </if>
            <if test="tagIds != null">
            tag_ids = #{tagIds,jdbcType=VARCHAR},
            </if>
            <if test="tagNames != null">
            tag_names = #{tagNames,jdbcType=VARCHAR},
            </if>
            <if test="extendInfo != null">
            extend_info = #{extendInfo,jdbcType=VARCHAR},
            </if>
            <if test="remarks != null">
            remarks = #{remarks,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="org.eq.modules.product.entity.Product">
        update platform_product
        set
        <trim  suffixOverrides=",">
              name = #{name,jdbcType=VARCHAR},
              product_img = #{productImg,jdbcType=VARCHAR},
              product_accept_id = #{productAcceptId,jdbcType=BIGINT},
              product_issuer_id = #{productIssuerId,jdbcType=BIGINT},
              unit_price = #{unitPrice,jdbcType=INTEGER},
              sort = #{sort,jdbcType=INTEGER},
              status = #{status,jdbcType=INTEGER},
              create_date = #{createDate,jdbcType=TIMESTAMP},
              update_date = #{updateDate,jdbcType=TIMESTAMP},
              expiration_start = #{expirationStart,jdbcType=VARCHAR},
              expiration_end = #{expirationEnd,jdbcType=VARCHAR},
              tag_ids = #{tagIds,jdbcType=VARCHAR},
              tag_names = #{tagNames,jdbcType=VARCHAR},
              extend_info = #{extendInfo,jdbcType=VARCHAR},
              remarks = #{remarks,jdbcType=VARCHAR},
        </trim>
        where id = #{id,jdbcType=BIGINT}
    </update>

</mapper>