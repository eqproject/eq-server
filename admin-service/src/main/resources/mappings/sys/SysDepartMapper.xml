<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.eq.basic.modules.sys.dao.SysDepartMapper">
    <resultMap id="BaseResultMap" type="org.eq.basic.modules.sys.entity.SysDepart">
        <id column="id" jdbcType="BIGINT" property="id" />
	    <result column="name" jdbcType="VARCHAR" property="name" />
	    <result column="code" jdbcType="VARCHAR" property="code" />
	    <result column="office_id" jdbcType="BIGINT" property="officeId" />
	    <result column="type" jdbcType="VARCHAR" property="type" />
	    <result column="sort" jdbcType="INTEGER" property="sort" />
	    <result column="create_by" jdbcType="BIGINT" property="createBy" />
	    <result column="create_date" jdbcType="DATE" property="createDate" />
	    <result column="update_by" jdbcType="BIGINT" property="updateBy" />
	    <result column="update_date" jdbcType="DATE" property="updateDate" />
	    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
	    <result column="del_flag" jdbcType="CHAR" property="delFlag" />
    </resultMap>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List">
        id,name,code,office_id,type,sort,create_by,create_date,update_by,update_date,remarks,del_flag
    </sql>

    <select id="selectByExample" parameterType="org.eq.basic.modules.sys.entity.SysDepartExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from sys_depart
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from sys_depart
        where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from sys_depart
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByExample" parameterType="org.eq.basic.modules.sys.entity.SysDepartExample">
        delete from sys_depart
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" parameterType="org.eq.basic.modules.sys.entity.SysDepart">
        insert into sys_depart (name,code,office_id,type,sort,create_by,create_date,update_by,update_date,remarks,del_flag)
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            #{name,jdbcType=VARCHAR},
            #{code,jdbcType=VARCHAR},
            #{officeId,jdbcType=BIGINT},
            #{type,jdbcType=VARCHAR},
            #{sort,jdbcType=INTEGER},
            #{createBy,jdbcType=BIGINT},
            #{createDate,jdbcType=DATE},
            #{updateBy,jdbcType=BIGINT},
            #{updateDate,jdbcType=DATE},
            #{remarks,jdbcType=VARCHAR},
            #{delFlag,jdbcType=CHAR},
        </trim>
    </insert>

    <insert id="insertSelective" parameterType="org.eq.basic.modules.sys.entity.SysDepart">
        insert into sys_depart
        <trim prefix="(" suffix=")" suffixOverrides=",">
            name,
            code,
            office_id,
            type,
            sort,
            create_by,
            create_date,
            update_by,
            update_date,
            remarks,
            del_flag,
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{name,jdbcType=VARCHAR},
            #{code,jdbcType=VARCHAR},
            #{officeId,jdbcType=BIGINT},
            #{type,jdbcType=VARCHAR},
            #{sort,jdbcType=INTEGER},
            #{createBy,jdbcType=BIGINT},
            #{createDate,jdbcType=DATE},
            #{updateBy,jdbcType=BIGINT},
            #{updateDate,jdbcType=DATE},
            #{remarks,jdbcType=VARCHAR},
            #{delFlag,jdbcType=CHAR},
        </trim>
    </insert>

    <select id="countByExample" parameterType="org.eq.basic.modules.sys.entity.SysDepartExample" resultType="java.lang.Long">
        select count(*) from sys_depart
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map">
        update sys_depart
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.code != null">
                code = #{record.code,jdbcType=VARCHAR},
            </if>
            <if test="record.officeId != null">
                office_id = #{record.officeId,jdbcType=BIGINT},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=VARCHAR},
            </if>
            <if test="record.sort != null">
                sort = #{record.sort,jdbcType=INTEGER},
            </if>
            <if test="record.createBy != null">
                create_by = #{record.createBy,jdbcType=BIGINT},
            </if>
            <if test="record.createDate != null">
                create_date = #{record.createDate,jdbcType=DATE},
            </if>
            <if test="record.updateBy != null">
                update_by = #{record.updateBy,jdbcType=BIGINT},
            </if>
            <if test="record.updateDate != null">
                update_date = #{record.updateDate,jdbcType=DATE},
            </if>
            <if test="record.remarks != null">
                remarks = #{record.remarks,jdbcType=VARCHAR},
            </if>
            <if test="record.delFlag != null">
                del_flag = #{record.delFlag,jdbcType=CHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map">
        update sys_depart
        set
        <trim  suffixOverrides=",">
            id = #{record.id,jdbcType=BIGINT},
            name = #{record.name,jdbcType=VARCHAR},
            code = #{record.code,jdbcType=VARCHAR},
            office_id = #{record.officeId,jdbcType=BIGINT},
            type = #{record.type,jdbcType=VARCHAR},
            sort = #{record.sort,jdbcType=INTEGER},
            create_by = #{record.createBy,jdbcType=BIGINT},
            create_date = #{record.createDate,jdbcType=DATE},
            update_by = #{record.updateBy,jdbcType=BIGINT},
            update_date = #{record.updateDate,jdbcType=DATE},
            remarks = #{record.remarks,jdbcType=VARCHAR},
            del_flag = #{record.delFlag,jdbcType=CHAR},
        </trim>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="org.eq.basic.modules.sys.entity.SysDepart">
        update sys_depart
        <set>
            <if test="name != null">
            name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="code != null">
            code = #{code,jdbcType=VARCHAR},
            </if>
            <if test="officeId != null">
            office_id = #{officeId,jdbcType=BIGINT},
            </if>
            <if test="type != null">
            type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="sort != null">
            sort = #{sort,jdbcType=INTEGER},
            </if>
            <if test="createBy != null">
            create_by = #{createBy,jdbcType=BIGINT},
            </if>
            <if test="createDate != null">
            create_date = #{createDate,jdbcType=DATE},
            </if>
            <if test="updateBy != null">
            update_by = #{updateBy,jdbcType=BIGINT},
            </if>
            <if test="updateDate != null">
            update_date = #{updateDate,jdbcType=DATE},
            </if>
            <if test="remarks != null">
            remarks = #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="delFlag != null">
            del_flag = #{delFlag,jdbcType=CHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="org.eq.basic.modules.sys.entity.SysDepart">
        update sys_depart
        set
        <trim  suffixOverrides=",">
              name = #{name,jdbcType=VARCHAR},
              code = #{code,jdbcType=VARCHAR},
              office_id = #{officeId,jdbcType=BIGINT},
              type = #{type,jdbcType=VARCHAR},
              sort = #{sort,jdbcType=INTEGER},
              create_by = #{createBy,jdbcType=BIGINT},
              create_date = #{createDate,jdbcType=DATE},
              update_by = #{updateBy,jdbcType=BIGINT},
              update_date = #{updateDate,jdbcType=DATE},
              remarks = #{remarks,jdbcType=VARCHAR},
              del_flag = #{delFlag,jdbcType=CHAR},
        </trim>
        where id = #{id,jdbcType=BIGINT}
    </update>

</mapper>