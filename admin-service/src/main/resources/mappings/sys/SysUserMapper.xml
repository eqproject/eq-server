<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.eq.basic.modules.sys.dao.SysUserMapper">
    <resultMap id="BaseResultMap" type="org.eq.basic.modules.sys.entity.SysUser">
        <id column="id" jdbcType="BIGINT" property="id" />
	    <result column="area_id" jdbcType="BIGINT" property="areaId" />
	    <result column="office_id" jdbcType="BIGINT" property="officeId" />
	    <result column="depart_id" jdbcType="BIGINT" property="departId" />
	    <result column="lnm" jdbcType="VARCHAR" property="lnm" />
	    <result column="pw" jdbcType="VARCHAR" property="pw" />
	    <result column="nm" jdbcType="VARCHAR" property="nm" />
	    <result column="sex" jdbcType="CHAR" property="sex" />
	    <result column="status" jdbcType="INTEGER" property="status" />
	    <result column="tel" jdbcType="VARCHAR" property="tel" />
	    <result column="no_id" jdbcType="BIGINT" property="noId" />
	    <result column="type" jdbcType="INTEGER" property="type" />
	    <result column="photo_head" jdbcType="VARCHAR" property="photoHead" />
	    <result column="login_ip" jdbcType="VARCHAR" property="loginIp" />
	    <result column="login_date" jdbcType="DATE" property="loginDate" />
	    <result column="job" jdbcType="VARCHAR" property="job" />
	    <result column="create_by" jdbcType="BIGINT" property="createBy" />
	    <result column="create_date" jdbcType="DATE" property="createDate" />
	    <result column="update_by" jdbcType="BIGINT" property="updateBy" />
	    <result column="update_date" jdbcType="DATE" property="updateDate" />
	    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
	    <result column="del_flag" jdbcType="CHAR" property="delFlag" />
    </resultMap>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List">
        id,area_id,office_id,depart_id,lnm,pw,nm,sex,status,tel,no_id,type,photo_head,login_ip,login_date,job,create_by,create_date,update_by,update_date,remarks,del_flag
    </sql>

    <select id="selectByExample" parameterType="org.eq.basic.modules.sys.entity.SysUserExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from sys_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from sys_user
        where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from sys_user
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByExample" parameterType="org.eq.basic.modules.sys.entity.SysUserExample">
        delete from sys_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" parameterType="org.eq.basic.modules.sys.entity.SysUser">
        <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into sys_user (area_id,office_id,depart_id,lnm,pw,nm,sex,status,tel,no_id,type,photo_head,login_ip,login_date,job,create_by,create_date,update_by,update_date,remarks,del_flag)
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            #{areaId,jdbcType=BIGINT},
            #{officeId,jdbcType=BIGINT},
            #{departId,jdbcType=BIGINT},
            #{lnm,jdbcType=VARCHAR},
            #{pw,jdbcType=VARCHAR},
            #{nm,jdbcType=VARCHAR},
            #{sex,jdbcType=CHAR},
            #{status,jdbcType=INTEGER},
            #{tel,jdbcType=VARCHAR},
            #{noId,jdbcType=BIGINT},
            #{type,jdbcType=INTEGER},
            #{photoHead,jdbcType=VARCHAR},
            #{loginIp,jdbcType=VARCHAR},
            #{loginDate,jdbcType=DATE},
            #{job,jdbcType=VARCHAR},
            #{createBy,jdbcType=BIGINT},
            #{createDate,jdbcType=DATE},
            #{updateBy,jdbcType=BIGINT},
            #{updateDate,jdbcType=DATE},
            #{remarks,jdbcType=VARCHAR},
            #{delFlag,jdbcType=CHAR},
        </trim>
    </insert>

    <insert id="insertSelective" parameterType="org.eq.basic.modules.sys.entity.SysUser">
        <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into sys_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            area_id,
            office_id,
            depart_id,
            lnm,
            pw,
            nm,
            sex,
            status,
            tel,
            no_id,
            type,
            photo_head,
            login_ip,
            login_date,
            job,
            create_by,
            create_date,
            update_by,
            update_date,
            remarks,
            del_flag,
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{areaId,jdbcType=BIGINT},
            #{officeId,jdbcType=BIGINT},
            #{departId,jdbcType=BIGINT},
            #{lnm,jdbcType=VARCHAR},
            #{pw,jdbcType=VARCHAR},
            #{nm,jdbcType=VARCHAR},
            #{sex,jdbcType=CHAR},
            #{status,jdbcType=INTEGER},
            #{tel,jdbcType=VARCHAR},
            #{noId,jdbcType=BIGINT},
            #{type,jdbcType=INTEGER},
            #{photoHead,jdbcType=VARCHAR},
            #{loginIp,jdbcType=VARCHAR},
            #{loginDate,jdbcType=DATE},
            #{job,jdbcType=VARCHAR},
            #{createBy,jdbcType=BIGINT},
            #{createDate,jdbcType=DATE},
            #{updateBy,jdbcType=BIGINT},
            #{updateDate,jdbcType=DATE},
            #{remarks,jdbcType=VARCHAR},
            #{delFlag,jdbcType=CHAR},
        </trim>
    </insert>

    <select id="countByExample" parameterType="org.eq.basic.modules.sys.entity.SysUserExample" resultType="java.lang.Long">
        select count(*) from sys_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map">
        update sys_user
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.areaId != null">
                area_id = #{record.areaId,jdbcType=BIGINT},
            </if>
            <if test="record.officeId != null">
                office_id = #{record.officeId,jdbcType=BIGINT},
            </if>
            <if test="record.departId != null">
                depart_id = #{record.departId,jdbcType=BIGINT},
            </if>
            <if test="record.lnm != null">
                lnm = #{record.lnm,jdbcType=VARCHAR},
            </if>
            <if test="record.pw != null">
                pw = #{record.pw,jdbcType=VARCHAR},
            </if>
            <if test="record.nm != null">
                nm = #{record.nm,jdbcType=VARCHAR},
            </if>
            <if test="record.sex != null">
                sex = #{record.sex,jdbcType=CHAR},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=INTEGER},
            </if>
            <if test="record.tel != null">
                tel = #{record.tel,jdbcType=VARCHAR},
            </if>
            <if test="record.noId != null">
                no_id = #{record.noId,jdbcType=BIGINT},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=INTEGER},
            </if>
            <if test="record.photoHead != null">
                photo_head = #{record.photoHead,jdbcType=VARCHAR},
            </if>
            <if test="record.loginIp != null">
                login_ip = #{record.loginIp,jdbcType=VARCHAR},
            </if>
            <if test="record.loginDate != null">
                login_date = #{record.loginDate,jdbcType=DATE},
            </if>
            <if test="record.job != null">
                job = #{record.job,jdbcType=VARCHAR},
            </if>
            <if test="record.createBy != null">
                create_by = #{record.createBy,jdbcType=BIGINT},
            </if>
            <if test="record.createDate != null">
                create_date = #{record.createDate,jdbcType=DATE},
            </if>
            <if test="record.updateBy != null">
                update_by = #{record.updateBy,jdbcType=BIGINT},
            </if>
            <if test="record.updateDate != null">
                update_date = #{record.updateDate,jdbcType=DATE},
            </if>
            <if test="record.remarks != null">
                remarks = #{record.remarks,jdbcType=VARCHAR},
            </if>
            <if test="record.delFlag != null">
                del_flag = #{record.delFlag,jdbcType=CHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map">
        update sys_user
        set
        <trim  suffixOverrides=",">
            id = #{record.id,jdbcType=BIGINT},
            area_id = #{record.areaId,jdbcType=BIGINT},
            office_id = #{record.officeId,jdbcType=BIGINT},
            depart_id = #{record.departId,jdbcType=BIGINT},
            lnm = #{record.lnm,jdbcType=VARCHAR},
            pw = #{record.pw,jdbcType=VARCHAR},
            nm = #{record.nm,jdbcType=VARCHAR},
            sex = #{record.sex,jdbcType=CHAR},
            status = #{record.status,jdbcType=INTEGER},
            tel = #{record.tel,jdbcType=VARCHAR},
            no_id = #{record.noId,jdbcType=BIGINT},
            type = #{record.type,jdbcType=INTEGER},
            photo_head = #{record.photoHead,jdbcType=VARCHAR},
            login_ip = #{record.loginIp,jdbcType=VARCHAR},
            login_date = #{record.loginDate,jdbcType=DATE},
            job = #{record.job,jdbcType=VARCHAR},
            create_by = #{record.createBy,jdbcType=BIGINT},
            create_date = #{record.createDate,jdbcType=DATE},
            update_by = #{record.updateBy,jdbcType=BIGINT},
            update_date = #{record.updateDate,jdbcType=DATE},
            remarks = #{record.remarks,jdbcType=VARCHAR},
            del_flag = #{record.delFlag,jdbcType=CHAR},
        </trim>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="org.eq.basic.modules.sys.entity.SysUser">
        update sys_user
        <set>
            <if test="areaId != null">
            area_id = #{areaId,jdbcType=BIGINT},
            </if>
            <if test="officeId != null">
            office_id = #{officeId,jdbcType=BIGINT},
            </if>
            <if test="departId != null">
            depart_id = #{departId,jdbcType=BIGINT},
            </if>
            <if test="lnm != null">
            lnm = #{lnm,jdbcType=VARCHAR},
            </if>
            <if test="pw != null">
            pw = #{pw,jdbcType=VARCHAR},
            </if>
            <if test="nm != null">
            nm = #{nm,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
            sex = #{sex,jdbcType=CHAR},
            </if>
            <if test="status != null">
            status = #{status,jdbcType=INTEGER},
            </if>
            <if test="tel != null">
            tel = #{tel,jdbcType=VARCHAR},
            </if>
            <if test="noId != null">
            no_id = #{noId,jdbcType=BIGINT},
            </if>
            <if test="type != null">
            type = #{type,jdbcType=INTEGER},
            </if>
            <if test="photoHead != null">
            photo_head = #{photoHead,jdbcType=VARCHAR},
            </if>
            <if test="loginIp != null">
            login_ip = #{loginIp,jdbcType=VARCHAR},
            </if>
            <if test="loginDate != null">
            login_date = #{loginDate,jdbcType=DATE},
            </if>
            <if test="job != null">
            job = #{job,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
            create_by = #{createBy,jdbcType=BIGINT},
            </if>
            <if test="createDate != null">
            create_date = #{createDate,jdbcType=DATE},
            </if>
            <if test="updateBy != null">
            update_by = #{updateBy,jdbcType=BIGINT},
            </if>
            <if test="updateDate != null">
            update_date = #{updateDate,jdbcType=DATE},
            </if>
            <if test="remarks != null">
            remarks = #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="delFlag != null">
            del_flag = #{delFlag,jdbcType=CHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="org.eq.basic.modules.sys.entity.SysUser">
        update sys_user
        set
        <trim  suffixOverrides=",">
              area_id = #{areaId,jdbcType=BIGINT},
              office_id = #{officeId,jdbcType=BIGINT},
              depart_id = #{departId,jdbcType=BIGINT},
              lnm = #{lnm,jdbcType=VARCHAR},
              pw = #{pw,jdbcType=VARCHAR},
              nm = #{nm,jdbcType=VARCHAR},
              sex = #{sex,jdbcType=CHAR},
              status = #{status,jdbcType=INTEGER},
              tel = #{tel,jdbcType=VARCHAR},
              no_id = #{noId,jdbcType=BIGINT},
              type = #{type,jdbcType=INTEGER},
              photo_head = #{photoHead,jdbcType=VARCHAR},
              login_ip = #{loginIp,jdbcType=VARCHAR},
              login_date = #{loginDate,jdbcType=DATE},
              job = #{job,jdbcType=VARCHAR},
              create_by = #{createBy,jdbcType=BIGINT},
              create_date = #{createDate,jdbcType=DATE},
              update_by = #{updateBy,jdbcType=BIGINT},
              update_date = #{updateDate,jdbcType=DATE},
              remarks = #{remarks,jdbcType=VARCHAR},
              del_flag = #{delFlag,jdbcType=CHAR},
        </trim>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="findUserList" parameterType="org.eq.basic.modules.sys.entity.SysUser" resultType="org.eq.basic.modules.sys.entity.SysUser">
        select
        sys_user.id "id",
        sys_user.lnm "lnm",
        sys_user.`status` "status",
        sys_user.no_id "noId",
        sys_user.login_ip "loginIp",
        sys_user.login_date "logindate",
        sys_user.remarks "remarks",
        sys_user_info.sex "sysUserInfo.sex",
        sys_user_info.`status` "sysUserInfo.status",
        sys_user_info.name "sysUserInfo.name",
        sys_user_info.tel "sysUserInfo.tel",
        sys_user_info.type "sysUserInfo.type",
        sys_user_info.photo_head "sysUserInfo.photoHead"
        from
        sys_user sys_user
        inner join sys_user_info sys_user_info on sys_user_info.id = sys_user.no_id
        left join sys_user_office sys_user_office on sys_user_office.user_id = sys_user.id
        where 1=1
        <if test="sysUser.id != null">
            and sys_user.id = #{sysUser.id}
        </if>
        <if test="sysUser.lnm != null and sysUser.lnm != ''">
            and sys_user.lnm like CONCAT('%', #{sysUser.lnm}, '%')
        </if>
        <if test="sysUser.sysUserInfo!=null and sysUser.sysUserInfo.name != null and sysUser.sysUserInfo.name != ''">
            and sys_user_info.name like CONCAT('%', #{sysUser.sysUserInfo.name}, '%')
        </if>
        <if test="sysUser.officeidsStr!= null">
            and sys_user_office.office_id in ( ${sysUser.officeidsStr} )
        </if>
        <if test="sysUser.status!= null">
            and sys_user.status = #{sysUser.status}
        </if>
        and sys_user.del_flag = #{sysUser.delFlag,jdbcType=CHAR}
        and sys_user_info.del_flag = #{sysUser.delFlag,jdbcType=CHAR}
        group by sys_user.id
        <if test="sysUser.orderByClause != null">
            order by ${sysUser.orderByClause}
        </if>
    </select>

</mapper>